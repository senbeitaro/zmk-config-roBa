#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <3 4>;
        };

        muhennkann {
            bindings = <&kp ESC>;
            key-positions = <0 1 2>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <8 9>;
        };

        mouseL {
            bindings = <&mkp LCLK>;
            key-positions = <18 19>;
        };

        mouseR {
            bindings = <&mkp RCLK>;
            key-positions = <19 20>;
        };

        mouseM {
            bindings = <&mkp MCLK>;
            key-positions = <18 20>;
        };

        dclick {
            bindings = <&dclick>;
            key-positions = <18 19 20>;
        };

        back {
            bindings = <&mkp MB4>;
            key-positions = <17 18>;
        };

        forward {
            bindings = <&mkp MB5>;
            key-positions = <5 6>;
        };

        curve_L {
            bindings = <&kp LS(NUMBER_8)>;
            key-positions = <14 4>;
        };

        curve_R {
            bindings = <&kp LS(NUMBER_9)>;
            key-positions = <5 17>;
        };

        dclick2 {
            bindings = <&dclick>;
            key-positions = <18 6>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        dclick: dclick {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp LCLK &mkp LCLK>;
            label = "DCLICK";
        };

        curve_macro: curve_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT5 &kp LS(N8) &kp LS(N9) &kp LEFT>;
            label = "CURVE_MACRO";
        };

        keybracket_macro: keycurve_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT4 &kp RBKT &kp BACKSLASH &kp ENTER &kp LEFT_ARROW>;
            label = "KEYCURVE_MACRO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E           &kp R                        &kp T                                                  &kp Y        &kp U  &lt 5 I              &kp O          &kp P
&kp A             &kp S         &kp D           &kp F                        &kp G        &kp LS(LG(S))            &mo 6            &kp H        &kp J  &lt 5 K              &kp L          &kp MINUS
&mt LEFT_SHIFT Z  &mt LCTRL X   &mt LEFT_ALT C  &kp V                        &kp B        &lt 1 RIGHT_BRACKET      &lt 1 BACKSLASH  &kp N        &kp M  &mt RIGHT_ALT COMMA  &mt RCTRL DOT  &mt RSHIFT SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT    &mt LEFT_SHIFT INT_MUHENKAN  &lt 2 SPACE  &lt 3 INT_HENKAN         &kp BACKSPACE    &lt 2 ENTER                                             &to 7
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        KIGOU {
            bindings = <
&kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                      &none   &none   &none   &none   &none
&kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &trans      &none   &none   &none   &none   &none   &none
&trans      &trans      &trans      &trans      &trans      &trans      &trans  &trans  &trans  &trans  &trans  &none
&trans      &trans      &trans      &trans      &trans      &trans      &trans  &trans                          &none
            >;
        };

        NUM_ARROW {
            bindings = <
&kp N1                &kp N2           &kp N3                      &kp N4  &kp N5                                             &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &kp LEFT_BRACKET
&kp N6                &kp N7           &kp N8                      &kp N9  &kp N0  &kp LC(LA(KP_NUMBER_0))      &curve_macro  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LS(INT_RO)
&mt LEFT_SHIFT MINUS  &mt LCTRL EQUAL  &mt LS(LEFT_ALT) LS(EQUAL)  &none   &none   &kp LS(N8)                   &kp LS(N9)    &none          &none           &kp SEMICOLON   &kp SQT          &kp INT_RO
&trans                &trans           &trans                      &trans  &trans  &trans                       &trans        &trans                                                          &kp LS(INTERNATIONAL_3)
            >;
        };

        FUNCTION_NUM {
            bindings = <
&kp F1     &kp F2        &kp F3  &kp F4  &kp F5                                                   &kp LS(MINUS)  &kp N7  &kp N8  &kp N9  &kp LS(SEMICOLON)
&kp F6     &kp F7        &kp F8  &kp F9  &kp F10    &none                      &keybracket_macro  &kp TAB        &kp N4  &kp N5  &kp N6  &kp MINUS
&kp F11    &kp F12       &none   &none   &none      &kp LS(RIGHT_BRACKET)      &kp LS(BACKSLASH)  &kp N0         &kp N1  &kp N2  &kp N3  &kp LS(SQT)
&kp LCTRL  &kp LEFT_WIN  &none   &none   &kp SPACE  &none                      &kp BACKSPACE      &kp ENTER                              &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp TAB LS(TAB)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &to 0
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader   &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &out OUT_BLE  &out OUT_USB                                            &bt BT_CLR_ALL
            >;
        };

        Game {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &to 0
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
